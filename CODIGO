import numpy as np
from matplotlib import pyplot as plt
import cv2 #opencv
import os
from math import sqrt
import imutils

imagen=cv2.imread('hoja1.png')
retval, prim= cv2.threshold(imagen, 12, 255, cv2.THRESH_BINARY)
res1 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res2 = cv2.resize(prim, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('HOJA',res1)
cv2.imshow('umbral1',res2)
cv2.imwrite('Imagen.png',res2)
cv2.waitKey(0)
cv2.destroyAllWindows()

imagen2 = cv2.imread('hoja1.png',cv2.IMREAD_GRAYSCALE)
retval, seg= cv2.threshold(imagen2, 32, 255, cv2.THRESH_BINARY)
res3 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res4 = cv2.resize(seg, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('HOJA',res3)
cv2.imshow('umbral grayscale',res3)
cv2.imwrite('Imagen2.png',res4)
cv2.waitKey(0)
cv2.destroyAllWindows()

th = cv2.adaptiveThreshold(imagen2, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 115, 1)
res5 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res6 = cv2.resize(th, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('HOJA',res5)
cv2.imshow('umbral adaptativo gaussian',res6)
cv2.imwrite('Imagen3.png',res6)
cv2.waitKey(0)
cv2.destroyAllWindows()

retval2,th2 = cv2.threshold(imagen2,120,255,cv2.THRESH_OTSU)
res7 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res8 = cv2.resize(th2, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('HOJA',res7)
cv2.imshow('umbral otsu',res8)
cv2.imwrite('Imagen4.png',res8)
cv2.waitKey(0)
cv2.destroyAllWindows()

retval2,th3 = cv2.threshold(imagen2,120,255,cv2.THRESH_BINARY)
res9 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res10 = cv2.resize(th3, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('HOJA',res9)
cv2.imshow('tresh binary',res10)
cv2.imwrite('Imagen5.png',res10)
cv2.waitKey(0)
cv2.destroyAllWindows()

retval2,th4 = cv2.threshold(imagen2,120,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
res11 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res12 = cv2.resize(th4, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('HOJA',res11)
cv2.imshow('umbral binary+ otsu',res12)
cv2.imwrite('Imagen6.png',res12)
cv2.waitKey(0)
cv2.destroyAllWindows()

retval2,th5 = cv2.threshold(imagen2,120,255,cv2.THRESH_BINARY_INV)
res13 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res14 = cv2.resize(th5, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('HOJA',res13)
cv2.imshow('umbral binaryi invert',res14)
cv2.imwrite('Imagen7.png',res14)
cv2.waitKey(0)
cv2.destroyAllWindows()

retval2,th6 = cv2.threshold(imagen2,120,255,cv2.ADAPTIVE_THRESH_GAUSSIAN_C+cv2.THRESH_BINARY_INV)
res15 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res16 = cv2.resize(th6, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('ORIGINAL',res15)
cv2.imshow('binary inv+gaussian',res16)
cv2.imwrite('Imagen8.png',res16)
cv2.waitKey(0)
cv2.destroyAllWindows()

th7= cv2.adaptiveThreshold(imagen2, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 115, 1)
res17 = cv2.resize(imagen, (400,500), interpolation = cv2.INTER_CUBIC)
res18 = cv2.resize(th7, (400,500), interpolation = cv2.INTER_CUBIC)
cv2.imshow('HOJA',res17)
cv2.imshow('Adaptive thresholdbinary',res18)
cv2.imwrite('Imagen9.png',res18)
cv2.waitKey(0)
cv2.destroyAllWindows()
